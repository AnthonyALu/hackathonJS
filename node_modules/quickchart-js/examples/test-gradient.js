const QuickChart = require('../index');

// Function to create chart URL
const createChart = async (params, width, height, bgColor) => {
  const myChart = new QuickChart();
  myChart.setConfig(params).setWidth(width).setHeight(height).setBackgroundColor(bgColor);
  const url = await myChart.getUrl();
  console.log(url);
  return url;
};

const progressBar = {
  type: 'progressBar',
  data: {
    datasets: [
      {
        data: ['75'],
        datalabels: {
          label: {
            title: 'eee',
          },
        },

        backgroundColor: [QuickChart.getGradientFillHelper('horizontal', ['#C04848', '#480048'])],
      },
      {
        data: [100],
        backgroundColor: ['rgba(0,0,0,0.5)'],
        borderColor: 'none',
      },
    ],
  },
  options: {
    layout: {
      padding: 20,
    },
    title: {
      display: true,
      text: 'Service Gross %',
      fontColor: '#fff',
      fontSize: 18,
    },
    annotation: {
      annotations: [
        {
          type: 'line',
          mode: 'vertical',
          scaleID: 'x-axis-0',
          value: 73,
          borderColor: 'gold',
          borderWidth: 4,
          label: {
            enabled: true,
            content: 'Goal: 73%',
            position: 'bottom',
            backgroundColor: 'black',
            fontSize: 16,
          },
        },
      ],
    },
    plugins: {
      tooltip: {
        callbacks: {
          label(context) {
            let label = context.dataset.label || '';

            if (label) {
              label += ': ';
            }
            if (context.parsed.y !== null) {
              label += new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD',
              }).format(context.parsed.y);
            }
            return label;
          },
        },
      },
      datalabels: {
        color: '#ffffff',
        font: {
          size: 20,
          style: 'bold',
        },
      },
    },
  },
};

createChart(progressBar, 300, 150, '#383838');
